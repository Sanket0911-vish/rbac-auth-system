// controllers/authController.js
const bcrypt = require('bcryptjs');
const { generateToken } = require('../utils/jwtUtil');
const User = require('../models/user');
const Role = require('../models/role');

async function register(req, res) {
    const { username, password, roleId } = req.body;
    const hashedPassword = await bcrypt.hash(password, 10);

    try {
        await User.create(username, hashedPassword, roleId);
        res.status(201).json({ message: 'User created successfully' });
    } catch (err) {
        res.status(500).json({ message: 'Error creating user' });
    }
}

async function login(req, res) {
    const { username, password } = req.body;
    const user = await User.findByUsername(username);

    if (!user) return res.status(404).json({ message: 'User not found' });

    const match = await bcrypt.compare(password, user.PasswordHash);
    if (!match) return res.status(401).json({ message: 'Invalid password' });

    const token = generateToken(user.UserId, user.RoleId);
    res.json({ token });
}

module.exports = { register, login };
